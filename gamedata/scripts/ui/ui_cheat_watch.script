--[[
Спецназовские часы
Vergas
© NLC-6.0
]]--

local function clamp_cycle(value, min, max)
 if value > max then value = min end
 if value < min then value = max end
 return value
end

g_dialog = {}

local last_m = 0
local upd_t = misc.game_timer()


class "watch_dialog"(CUIScriptWnd)

local wnd_watch_hh        --окно часов в часах
local wnd_watch_mm        --окно минут в часах
local wnd_watch_2t        --окно двоеточия в часах
local wnd_alarm_hh        --окно часов в будильнике
local wnd_alarm_mm        --окно минут в будильнике
local wnd_alarm_2t        --окно двоеточия в будильнике
local wnd_sec_hh        --окно часов в секундомере
local wnd_sec_mm        --окно минут в секундомере
local wnd_sec_2t        --окно двоеточия в секундомере
local wnd_rad_1          --окно радиации, цифра 1
local wnd_rad_2          --окно радиации, цифра 2
local wnd_rad_3          --окно радиации, цифра 3
local wnd_rad_4          --окно радиации, ед. измерения
local wnd_glass_m        --малое стекло
local wnd_glass_b        --большое стекло
local wnd_date_dd        --окно текущей даты день
local wnd_date_t1        --окно текущей даты первая точка
local wnd_date_mm        --окно текущей даты месяц
local wnd_date_t2        --окно текущей даты вторая точка
local wnd_date_yy        --окно текущей даты год
local wnd_day_w          --окно дня недели
local wnd_day_z_n        --окно надписи "Дней в зоне"
local wnd_day_z_2t        --окно двоеточия в "Дней в зоне"
local wnd_day_z_dd1        --окно количества в "Дней в зоне" 1 цифра
local wnd_day_z_dd2        --окно количества в "Дней в зоне" 2 цифра
local wnd_day_z_dd3        --окно количества в "Дней в зоне" 3 цифра
local wnd_alarm_on        --окто желтого будильника
local wnd_sec_on        --окто желтого секундомера


function set_lz(wnd, value)
 value = tonumber(value)
 if wnd and wnd.InitTexture and value >= 0 and value < 60 then
    wnd:InitTexture( sprintf("ui_watch_%02d", value) )
 end
end



function watch_dialog:__init(owner)
  super()
  g_dialog = self
  self.owner = owner
  self.watch = vergas_watch.g_watch
  self:SetWindowName("watch_dialog")
  self:InitControls()
  self:InitCallBacks()
  wprintf(" watch_dialog initialized as~C0A %s~C07 ", DumpVar(self))
end

function watch_dialog:__finalize()
 wprintf("[~T/~B].~C06 #DBG: __finalize called for ~C0A %s~C07 ", DumpVar(self))
end

function watch_dialog:InitControls()

  -- Положение и размеры окна
  self:Init(0,0,1024,768)
  
  -- файл-описатель элементов
  local xml = CScriptXmlInit()
  xml:ParseFile("ui_cheat_watch.xml")
  
  xml:InitStatic("background", self)  --Собственно часики
  
  self:Register(xml:Init3tButton("btn_hours",   self), "btn_hours")        -- Кнопка "Ч"
  self:Register(xml:Init3tButton("btn_min",     self), "btn_min")          -- Кнопка "M"
  self:Register(xml:Init3tButton("btn_sbros_t", self), "btn_reset_alarm")  -- Кнопка СБРОС будильника
  self:Register(xml:Init3tButton("btn_start_t", self), "btn_set_alarm")    -- Кнопка СТАРТ будильника

  self:Register(xml:Init3tButton("btn_sbros_s", self),"btn_sbros_s")    -- Кнопка СБРОС секундомера
  self:Register(xml:Init3tButton("btn_start_s", self),"btn_start_s")    -- Кнопка СТАРТ секундомера
  
  --часы открыты
  vergas_watch.set_flag_watch_open(true)
  
  --вывожу статичные окна
  self:set_static_windows()
  
  --вывожу динамичные окна
  self:set_dynamic_windows()
  
  --вывожу стекла
  self:set_glass_window_m()
  self:set_glass_window_b()
end

function watch_dialog:InitCallBacks()
  self:AddCallback("btn_hours",       ui_events.BUTTON_CLICKED,        self.btn_hours_inc, self)      -- Кнопка "Ч"
  self:AddCallback("btn_min",         ui_events.BUTTON_CLICKED,        self.btn_min_inc,   self)      -- Кнопка "M"
  self:AddCallback("btn_reset_alarm", ui_events.BUTTON_CLICKED,        self.btn_reset_alarm,  self)  -- Кнопка СБРОС будильника
  self:AddCallback("btn_set_alarm",   ui_events.BUTTON_CLICKED,        self.btn_set_alarm,    self)    -- Кнопка СТАРТ будильника
  self:AddCallback("btn_sbros_s",     ui_events.BUTTON_CLICKED,        self.btn_sbros_s,   self)      -- Кнопка СБРОС секундомера
  self:AddCallback("btn_start_s",     ui_events.BUTTON_CLICKED,        self.btn_start_s,   self)      -- Кнопка СТАРТ секундомера
end

function watch_dialog:OnKeyboard( dik, keyboard_action )
  CUIScriptWnd.OnKeyboard( self, dik,keyboard_action )
  --local bind = dik_to_bind( dik )
  if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
    -- на выход повесим Esc      код часов - вроде bind == 45
    --if dik == DIK_keys.DIK_ESCAPE or bind == 45 then
    if dik == DIK_keys.DIK_ESCAPE then
      self:on_quit()
    end
  end
  return true
end

function watch_dialog:on_quit()
  --передаю данные по режиму вывода
  --timer_v.set_show_mode(info_mode)
  g_dialog = {}
  vergas_watch.set_flag_watch_open(false)
  self:delete_windows()

  if self.watch:alarm_config().f then
     self.watch:enable_alarm()  -- перенастройка дня звонка
  end

  if vergas_watch.set_get_old_sizes("sec") ~= 0 and (not vergas_watch.set_get_flag_sec_show(2)) then
     vergas_watch.set_get_old_sizes("sec",0)
  end
  bind_stalker.restore_weapon()    --восстанавливаю руки и оружие на худе
  used_items.set_get_flag_use_gadget(1,true)
  local holder = self:GetHolder()
  if holder then
     holder:start_stop_dialog(self,true)
  end
  if self.Destroy then
     self:Destroy()
  end
end
--============================КНОПКИ=============================

function watch_dialog:update_alarm(h_add, m_add)
  local cfg = self.watch:alarm_config()
  cfg.h = clamp_cycle(cfg.h + h_add, 0, 23)
  cfg.m = clamp_cycle(cfg.m + m_add, 0, 59)
  wprintf("[~T]. #DBG: alarm time updated to~C0F %02d:%02d~C07", cfg.h, cfg.m)
  self:DrawAlarmTime()
end

function watch_dialog:btn_hours_inc()
 self:update_alarm(1, 0)
end

function watch_dialog:btn_min_inc()
 self:update_alarm(0, 1)
end



function watch_dialog:btn_reset_alarm()
  self.watch:disable_alarm()
  self.watch:shut_up()
  local cfg = self.watch:alarm_config()
  cfg.h = 0
  cfg.m = 0
  self:DrawAll()
  vergas_lib.s_play("pda\\pass_no",1)
  wnd_alarm_on:SetWndRect(0,0,0,0)
end

function watch_dialog:btn_set_alarm()
  --устанавливаю флаг запущенного будильника
  self.watch:enable_alarm()
  self.watch:shut_up()
  vergas_lib.s_play("pda\\pass_ok",1)
  wnd_alarm_on:SetWndRect(523,286,28,25)
  wnd_alarm_on:InitTexture("ui_watch_timer_on")
end

function watch_dialog:btn_sbros_s()
  vergas_watch.set_get_old_sizes("ss",0)
  set_lz(wnd_sec_hh, 0)
  set_lz(wnd_sec_mm, 0)
  vergas_watch.set_get_flag_sec_show(1,false)
  vergas_lib.s_play([[pda\pass_no]],1)
  wnd_sec_on:SetWndRect(0,0,0,0)
end

function watch_dialog:btn_start_s()
  --устанавливаю флаг запущенного секундомера
  vergas_watch.set_get_flag_sec_show(1,true)
  vergas_lib.s_play([[pda\pass_ok]],1)
  wnd_sec_on:SetWndRect(718,286,28,25)
  wnd_sec_on:InitTexture("ui_watch_sec_on")
end

--============================будильникЫ=============================

function watch_dialog:show_sec()
  local hh
  local mm
  
  if not vergas_watch.set_get_flag_sec_show(2) then
    --будильник не запущен
    return
  end

  local time_t = vergas_watch.set_get_old_sizes("sec")
  if time_t == nil then
    time_t = 0
  end
  time_t = time_t + 1
  
  hh = math.modf(time_t / 60)
  mm = time_t - hh*60
  
  if hh == 100 then
    hh = 0
    time_t = mm
  end
  
  vergas_watch.set_get_old_sizes("sec",time_t)
  
  if vergas_watch.get_flag_watch_open() then
    set_lz(wnd_sec_hh, hh)
    set_lz(wnd_sec_mm, mm)
  end  
end

function watch_dialog:show_radiation()
  if vergas_watch.get_flag_watch_open() then
     self:DrawRadiation()
  end
end
--=============================ОКНА===============================
function watch_dialog:set_static_windows() -- жирная копипаста, не смотреть !!!
  wnd_watch_2t = CUIStatic()
  self:AttachChild(wnd_watch_2t)
  wnd_watch_2t:SetAutoDelete(true)
  wnd_watch_2t:SetWndRect(558+30, 251+4, 10, 15)
  wnd_watch_2t:InitTexture("ui_watch_2t")

  wnd_alarm_2t = CUIStatic()
  self:AttachChild(wnd_alarm_2t)
  wnd_alarm_2t:SetAutoDelete(true)
  wnd_alarm_2t:SetWndRect(558+30, 288+4, 10, 15)
  wnd_alarm_2t:InitTexture("ui_watch_2t")

  wnd_sec_2t = CUIStatic()
  self:AttachChild(wnd_sec_2t)
  wnd_sec_2t:SetAutoDelete(true)
  wnd_sec_2t:SetWndRect(640+30, 288+4, 10, 15)
  wnd_sec_2t:InitTexture("ui_watch_2t")

  --вывожу текущую дату
  if true then
    local yy, mm, dd, h, m, s, ms = game.get_game_time():get()

    wnd_date_dd = CUIStatic()
    self:AttachChild(wnd_date_dd)
    wnd_date_dd:SetAutoDelete(true)
    wnd_date_dd:SetWndRect(518+79, 357+33, 20, 15)
    set_lz(wnd_date_dd, dd)

    wnd_date_t1 = CUIStatic()
    self:AttachChild(wnd_date_t1)
    wnd_date_t1:SetAutoDelete(true)
    wnd_date_t1:SetWndRect(518+79+20+1, 357+33, 10, 15)
    wnd_date_t1:InitTexture("ui_watch_tchk")

    wnd_date_mm = CUIStatic()
    self:AttachChild(wnd_date_mm)
    wnd_date_mm:SetAutoDelete(true)
    wnd_date_mm:SetWndRect(518+79+20+1+10+1, 357+33, 20, 15)
    set_lz(wnd_date_mm, mm)

    wnd_date_t2 = CUIStatic()
    self:AttachChild(wnd_date_t2)
    wnd_date_t2:SetAutoDelete(true)
    wnd_date_t2:SetWndRect(518+79+20+1+10+1+20+1, 357+33, 10, 15)
    wnd_date_t2:InitTexture("ui_watch_tchk")

    wnd_date_yy = CUIStatic()
    self:AttachChild(wnd_date_yy)
    wnd_date_yy:SetAutoDelete(true)
    wnd_date_yy:SetWndRect(518+79+20+1+10+1+20+1+10+1, 357+33, 20, 15)
    set_lz(wnd_date_yy, yy % 100)
  end
  
  --вывожу день недели
  local d_w = vergas_watch.set_day_week_textures()
  wnd_day_w = CUIStatic()
  self:AttachChild(wnd_day_w)
  wnd_day_w:SetAutoDelete(true)
  if d_w == "dw_1" then
    wnd_day_w:SetWndRect(518+50, 357+33+15+33, 131, 15)
  elseif d_w == "dw_2" then
    wnd_day_w:SetWndRect(518+75, 357+33+15+33, 82, 15)
  elseif d_w == "dw_3" then
    wnd_day_w:SetWndRect(518+85, 357+33+15+33, 62, 15)
  elseif d_w == "dw_4" then
    wnd_day_w:SetWndRect(518+78, 357+33+15+33, 76, 15)
  elseif d_w == "dw_5" then
    wnd_day_w:SetWndRect(518+74, 357+33+15+33, 85, 15)
  elseif d_w == "dw_6" then
    wnd_day_w:SetWndRect(518+75, 357+33+15+33, 82, 15)
  elseif d_w == "dw_7" then
    wnd_day_w:SetWndRect(518+55, 357+33+15+33, 123, 15)
  end
  wnd_day_w:InitTexture("ui_watch_"..d_w)
  
  --вывожу количество дней в зоне
  local t1,t2,t3 = vergas_watch.set_days_in_zont()
  
  wnd_day_z_n = CUIStatic()
  self:AttachChild(wnd_day_z_n)
  wnd_day_z_n:SetAutoDelete(true)
  wnd_day_z_n:SetStretchTexture(true)
  wnd_day_z_n:SetWndRect(518+36, 357+33+15+33+15+33, 116, 15)
  wnd_day_z_n:InitTexture("ui_watch_day_z")

  wnd_day_z_2t = CUIStatic()
  self:AttachChild(wnd_day_z_2t)
  wnd_day_z_2t:SetAutoDelete(true)
  wnd_day_z_2t:SetStretchTexture(true)
  wnd_day_z_2t:SetWndRect(518+36+116+1, 357+33+15+33+15+33, 10, 15)
  wnd_day_z_2t:InitTexture("ui_watch_2t")
  
  wnd_day_z_dd1 = CUIStatic()
  self:AttachChild(wnd_day_z_dd1)
  wnd_day_z_dd1:SetAutoDelete(true)
  wnd_day_z_dd1:SetStretchTexture(true)
  wnd_day_z_dd1:SetWndRect(518+36+116+1+10+1, 357+33+15+33+15+33, 10, 15)
  wnd_day_z_dd1:InitTexture("ui_watch_"..t1)
  
  wnd_day_z_dd2 = CUIStatic()
  self:AttachChild(wnd_day_z_dd2)
  wnd_day_z_dd2:SetAutoDelete(true)
  wnd_day_z_dd2:SetStretchTexture(true)
  wnd_day_z_dd2:SetWndRect(518+36+116+1+10+1+10+1, 357+33+15+33+15+33, 10, 15)
  wnd_day_z_dd2:InitTexture("ui_watch_"..t2)

  wnd_day_z_dd3 = CUIStatic()
  self:AttachChild(wnd_day_z_dd3)
  wnd_day_z_dd3:SetAutoDelete(true)
  wnd_day_z_dd3:SetStretchTexture(true)
  wnd_day_z_dd3:SetWndRect(518+36+116+1+10+1+10+1+10+1, 357+33+15+33+15+33, 10, 15)
  wnd_day_z_dd3:InitTexture("ui_watch_"..t3)
  
  wnd_alarm_on = CUIStatic()
  self:AttachChild(wnd_alarm_on)
  wnd_alarm_on:SetAutoDelete(true)
  wnd_alarm_on:SetStretchTexture(true)
  wnd_alarm_on:SetWndRect(523,286,28,25)
  if self.watch:alarm_config().f  then
    wnd_alarm_on:InitTexture("ui_watch_timer_on")
  end
  
  wnd_sec_on = CUIStatic()
  self:AttachChild(wnd_sec_on)
  wnd_sec_on:SetAutoDelete(true)
  wnd_sec_on:SetStretchTexture(true)
  wnd_sec_on:SetWndRect(718,286,28,25)
  if vergas_watch.set_get_flag_sec_show(2) then
    wnd_sec_on:InitTexture("ui_watch_sec_on")
  end
  
end

function watch_dialog:set_dynamic_windows() -- жирная копипаста, не смотреть !!!
  ODS("~C0E  set_dynamic_windows() start~C07")
  wnd_watch_hh = CUIStatic()
  self:AttachChild(wnd_watch_hh)
  wnd_watch_hh:SetAutoDelete(true)
  wnd_watch_hh:SetWndRect(558+10, 251+4,20, 15)
  
  wnd_watch_mm = CUIStatic()
  self:AttachChild(wnd_watch_mm)
  wnd_watch_mm:SetAutoDelete(true)
  wnd_watch_mm:SetWndRect(558+40, 251+4, 10, 15)
  
  wnd_alarm_hh = CUIStatic()
  self:AttachChild(wnd_alarm_hh)
  wnd_alarm_hh:SetAutoDelete(true)
  wnd_alarm_hh:SetWndRect(558+10, 288+4,20, 15)
  
  wnd_alarm_mm = CUIStatic()
  self:AttachChild(wnd_alarm_mm)
  wnd_alarm_mm:SetAutoDelete(true)
  wnd_alarm_mm:SetWndRect(558+40, 288+4, 10, 15)
  
  wnd_sec_hh = CUIStatic()
  self:AttachChild(wnd_sec_hh)
  wnd_sec_hh:SetAutoDelete(true)
  wnd_sec_hh:SetWndRect(640+10, 288+4,20, 15)
  
  wnd_sec_mm = CUIStatic()
  self:AttachChild(wnd_sec_mm)
  wnd_sec_mm:SetAutoDelete(true)
  wnd_sec_mm:SetWndRect(640+40, 288+4, 10, 15)

  wnd_sec_mm = CUIStatic()
  self:AttachChild(wnd_sec_mm)
  wnd_sec_mm:SetAutoDelete(true)
  wnd_sec_mm:SetWndRect(640+40, 288+4, 10, 15)

  wnd_rad_1 = CUIStatic()
  self:AttachChild(wnd_rad_1)
  wnd_rad_1:SetAutoDelete(true)

  wnd_rad_2 = CUIStatic()
  self:AttachChild(wnd_rad_2)
  wnd_rad_2:SetAutoDelete(true)

  wnd_rad_3 = CUIStatic()
  self:AttachChild(wnd_rad_3)
  wnd_rad_3:SetAutoDelete(true)

  wnd_rad_4 = CUIStatic()
  self:AttachChild(wnd_rad_4)
  wnd_rad_4:SetAutoDelete(true)

  self:DrawAll()
  ODS("~C0E  set_dynamic_windows() end~C07")
end


function watch_dialog:DrawCurrentTime()
  set_lz(wnd_watch_hh, level.get_time_hours())
  set_lz(wnd_watch_mm, level.get_time_minutes())
  if 0 == level.get_time_hours() and 0 == level.get_time_minutes() then
     self:set_static_windows() -- вероятно поменялась и дата
  end
end

function watch_dialog:DrawAlarmTime()
  local cfg = self.watch:alarm_config()
  set_lz(wnd_alarm_hh, cfg.h)
  set_lz(wnd_alarm_mm, cfg.m)
end

function watch_dialog:DrawAll()
  local hh = 0
  local mm = 0
  --вывожу время
  self:DrawCurrentTime()
  --вывожу будильник
  self:DrawAlarmTime()

  --вывожу секундомер
  if vergas_watch.set_get_flag_sec_show(2) then
    local time_t = vergas_watch.set_get_old_sizes("s") or 0
    hh = math.modf(time_t / 60)
    mm = time_t - hh * 60
  end

  set_lz(wnd_sec_hh, hh)
  set_lz(wnd_sec_mm, mm)
  --вывожу радиацию
  self:DrawRadiation()
end


function watch_dialog:UpdateImpl()
  local m = level.get_time_minutes()
  if (m ~= last_m) or (upd_t:elapsed(false) > 1) then
     upd_t:elapsed(true)
     last_m = m
     self:DrawAll()
  end
end

function watch_dialog:Update()
  LuaSafeCall("ui_cheat_watch.g_dialog:UpdateImpl()", "#code")
  CUIScriptWnd.Update(self)
end


function watch_dialog:DrawRadiation()
  local t1,t2,t3,t4 = vergas_watch.set_radiation_textures()
  if t1~= "0" or t2~= "0" or t3~= "0" then
    if t4 == "mkp" then
      wnd_rad_1:SetWndRect(640+7, 251+4, 10, 15)
      wnd_rad_1:InitTexture("ui_watch_"..t1)
      
      wnd_rad_2:SetWndRect(640+7+10+1, 251+4, 10, 15)
      wnd_rad_2:InitTexture("ui_watch_"..t2)

      wnd_rad_3:SetWndRect(640+7+10+1+10+1, 251+4, 10, 15)
      wnd_rad_3:InitTexture("ui_watch_"..t3)

      wnd_rad_4:SetWndRect(640+7+10+1+10+1+10+1, 251+4, 26, 15)
      wnd_rad_4:InitTexture("ui_watch_"..t4)
    elseif t4 == "mp" then
      wnd_rad_1:SetWndRect(640+9, 251+4, 10, 15)
      wnd_rad_1:InitTexture("ui_watch_"..t1)
      
      wnd_rad_2:SetWndRect(640+9+10+1, 251+4, 10, 15)
      wnd_rad_2:InitTexture("ui_watch_"..t2)

      wnd_rad_3:SetWndRect(640+9+10+1+10+1, 251+4, 10, 15)
      wnd_rad_3:InitTexture("ui_watch_"..t3)

      wnd_rad_4:SetWndRect(640+9+10+1+10+1+10+1, 251+4, 20, 15)
      wnd_rad_4:InitTexture("ui_watch_"..t4)
    elseif t4 == "p" then
      wnd_rad_1:SetWndRect(640+14, 251+4, 10, 15)
      wnd_rad_1:InitTexture("ui_watch_"..t1)
      
      wnd_rad_2:SetWndRect(640+14+10+1, 251+4, 10, 15)
      wnd_rad_2:InitTexture("ui_watch_"..t2)

      wnd_rad_3:SetWndRect(640+14+10+1+10+1, 251+4, 10, 15)
      wnd_rad_3:InitTexture("ui_watch_"..t3)

      wnd_rad_4:SetWndRect(640+14+10+1+10+1+10+1, 251+4, 20, 15)
      wnd_rad_4:InitTexture("ui_watch_"..t4)
    end
  end
end

function watch_dialog:set_glass_window_m()
  wnd_glass_m = CUIStatic()
  self:AttachChild(wnd_glass_m)
  wnd_glass_m:SetAutoDelete(true)
  wnd_glass_m:SetWndRect(517,233,233,93)
  wnd_glass_m:InitTexture("ui_watch_glass_m")
end

function watch_dialog:set_glass_window_b()
  wnd_glass_b = CUIStatic()
  self:AttachChild(wnd_glass_b)
  wnd_glass_b:SetAutoDelete(true)
  wnd_glass_b:SetWndRect(518,355,233,181)
  wnd_glass_b:InitTexture("ui_watch_glass_b")
end

function watch_dialog:delete_windows()
  if wnd_watch_hh~=nil then
    self:DetachChild(wnd_watch_hh)
    wnd_watch_hh = nil
  end
  
  if wnd_watch_mm~=nil then
    self:DetachChild(wnd_watch_mm)
    wnd_watch_mm = nil
  end
  
  if wnd_watch_2t~=nil then
    self:DetachChild(wnd_watch_2t)
    wnd_watch_2t = nil
  end

  if wnd_alarm_hh~=nil then
    self:DetachChild(wnd_alarm_hh)
    wnd_alarm_hh = nil
  end

  if wnd_alarm_mm~=nil then
    self:DetachChild(wnd_alarm_mm)
    wnd_alarm_mm = nil
  end

  if wnd_alarm_2t~=nil then
    self:DetachChild(wnd_alarm_2t)
    wnd_alarm_2t = nil
  end

  if wnd_sec_hh~=nil then
    self:DetachChild(wnd_sec_hh)
    wnd_sec_hh = nil
  end

  if wnd_sec_mm~=nil then
    self:DetachChild(wnd_sec_mm)
    wnd_sec_mm = nil
  end

  if wnd_sec_2t~=nil then
    self:DetachChild(wnd_sec_2t)
    wnd_sec_2t = nil
  end
  
  if wnd_rad_1~=nil then
    self:DetachChild(wnd_rad_1)
    wnd_rad_1 = nil
  end

  if wnd_rad_2~=nil then
    self:DetachChild(wnd_rad_2)
    wnd_rad_2 = nil
  end

  if wnd_rad_3~=nil then
    self:DetachChild(wnd_rad_3)
    wnd_rad_3 = nil
  end

  if wnd_rad_4~=nil then
    self:DetachChild(wnd_rad_4)
    wnd_rad_4 = nil
  end

  if wnd_glass_m~=nil then
    self:DetachChild(wnd_glass_m)
    wnd_glass_m = nil
  end

  if wnd_glass_b~=nil then
    self:DetachChild(wnd_glass_b)
    wnd_glass_b = nil
  end

  if wnd_date_dd~=nil then
    self:DetachChild(wnd_date_dd)
    wnd_date_dd = nil
  end

  if wnd_date_t1~=nil then
    self:DetachChild(wnd_date_t1)
    wnd_date_t1 = nil
  end

  if wnd_date_mm~=nil then
    self:DetachChild(wnd_date_mm)
    wnd_date_mm = nil
  end
  
  if wnd_date_t2~=nil then
    self:DetachChild(wnd_date_t2)
    wnd_date_t2 = nil
  end

  if wnd_date_yy~=nil then
    self:DetachChild(wnd_date_yy)
    wnd_date_yy = nil
  end

  if wnd_day_w~=nil then
    self:DetachChild(wnd_day_w)
    wnd_day_w = nil
  end

  if wnd_day_z_n~=nil then
    self:DetachChild(wnd_day_z_n)
    wnd_day_z_n = nil
  end

  if wnd_day_z_2t~=nil then
    self:DetachChild(wnd_day_z_2t)
    wnd_day_z_2t = nil
  end

  if wnd_day_z_dd1~=nil then
    self:DetachChild(wnd_day_z_dd1)
    wnd_day_z_dd1 = nil
  end

  if wnd_day_z_dd2~=nil then
    self:DetachChild(wnd_day_z_dd2)
    wnd_day_z_dd2 = nil
  end

  if wnd_day_z_dd3~=nil then
    self:DetachChild(wnd_day_z_dd3)
    wnd_day_z_dd3 = nil
  end

  if wnd_alarm_on~=nil then
    self:DetachChild(wnd_alarm_on)
    wnd_alarm_on = nil
  end

  if wnd_sec_on~=nil then
    self:DetachChild(wnd_sec_on)
    wnd_sec_on = nil
  end
  
end