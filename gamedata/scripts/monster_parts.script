-- -*- mode: lua; encoding: windows-1251 -*-
local actor      = db.actor
local monster    = nil
local snd        = nil
local knf_time_k = 1                             -- время отрезания, 2 секунды + коэфф. запчасти
local knf_brk_k  = {                             -- вероятность поломки ножа по запчастям
    [ "mutant_flesh_eye"         ] = 0.05,
    [ "mutant_boar_leg"          ] = 0.10,
    [ "mutant_dog_tail"          ] = 0.04,
    [ "mutant_psevdodog_tail"    ] = 0.08,
    [ "mutant_krovosos_jaw"      ] = 0.15,
    [ "mutant_burer_hand"        ] = 0.17,
    [ "mutant_zombie_hand"       ] = 0.14,
    [ "mutant_snork_leg"         ] = 0.17,
    [ "mutant_face_tushkano"     ] = 0.04,
    [ "mutant_hand_kontroler"    ] = 0.17,
    [ "mutant_poltergeist_glas"  ] = 0.05,
    [ "mutant_psevdogigant_hand" ] = 0.35,
    [ "mutant_tail_cat"          ] = 0.07,
    [ "mutant_chimera_kogot"     ] = 0.21,
    [ "mutant_flesh_shkura"      ] = 0.21,
    [ "mutant_e_chimera_kidney"  ] = 0.15,
}

function on_part_take( obj )
    local b = strposx( obj:section(), "mutant_" )
    if not ( monster and b ) then return end
    knf_time_k = 1
    local koeff_by_monster = knf_brk_k[ obj:section() ]
    local sc = actor:item_in_slot( 0 ):section()
    if sc and sc == "wpn_knife_m1" then knf_time_k = 0.5 end
    level.start_stop_menu( level.main_input_receiver(), true )
    sak.actor_hide_weapon()
    level.add_cam_effector( "camera_effects\\item_use_slow.anm", 8553, false, "" )
    if dsh.get_next_random( "monster_parts.on_part_take" ) > koeff_by_monster * knf_time_k then
        schedule.add( "loot_monster_snd", "monster_parts.loot_monster_sound()", 600 )
    else
        schedule.add( "knife_break_snd", "monster_parts.knife_break()", 1000 )
        local take_chns = 0.65
        if sc and sc == "wpn_knife_m1" then take_chns = 0.85 end
        if dsh.get_next_random( "monster_parts.on_part_take" ) > take_chns then
            misc.release_obj( obj )
        end
    end
    schedule.add(
        "loot_monster_finish", "monster_parts.stop_loot_already()",
        knf_time_k * ( 2500 + ( 10000 * koeff_by_monster ) )
    )
end

function stop_loot_already()
    if snd and snd:playing() then snd:stop() end
    sak.restore_weap()
end

function loot_monster_sound()
    snd = xr_sound.get_safe_sound_object( "zwuk_short\\loot_long_" .. lua_random( 1, 2 ) )
    snd:play_at_pos( actor, vector(), 0, sound_object.s2d )
end

function knife_break()
    local itm = actor:item_in_slot( 0 )
    if not itm then return end
    snd = xr_sound.get_safe_sound_object( "rykzack\\trader_script1c_9" )
    if itm:condition() <= 0.4 then
        misc.release_obj( itm )
        sak.send_tip( "Амба ножику, похоже...", "Да что ж такое!", 5, 20,   "uniq", "sak", "red" )
    else
        snd = xr_sound.get_safe_sound_object( "device\\sleeping_bag\\sleep_cancel" )
        params.add_condition( itm, -0.4 )
        sak.send_tip( "Чуть нож не сломал. Второй раз может и не выдержать...", "А чтоб тебя!", 5, 20,   "uniq", "sak", "yellow" )
    end
    snd:play_no_feedback( actor, sound_object.s2d, 0, vector(), 1.0)
end

function on_monster_use( victim, who )
    xr_s.register_callback( "on_item_take", monster_parts.on_part_take )
    monster = victim
end

function unreg_callback()
    xr_s.unregister_callback( "on_item_take", monster_parts.on_part_take, true )
end

function on_monster_stop_use()
    schedule.add( "unreg_timer", "monster_parts.unreg_callback()", 200)
    monster = nil
end


